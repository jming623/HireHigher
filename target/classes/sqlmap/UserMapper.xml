<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> <!-- mapper.xml설정코드 -->

<mapper namespace="com.hirehigher.user.mapper.UserMapper">
	
	<!-- vo로 넘어온 값은 #{변수명}으로 사용가능하다, !주의 sql문 마지막에 ;는 찍지않는다. -->


	<select id="login" resultType="UserVO">
		select * from USERS where USERID = #{userId} and USERPW = #{userPw}
	</select>

	<select id="kakaoLogin" resultType="UserVO">
		select * from USERS where USERID = #{userId}
	</select>

	<select id="findIdA" resultMap="idList">
		select USERID from USERS where USERNAME = #{userName} and BIRTHDAY=
		#{birthDay}
	</select>

	<select id="findIdB" resultMap="idList">
		select USERID from USERS where USERNAME = #{userName} and USERCELLNUM =
		#{userCellNum}

	</select>
	<select id="findPw" resultType="String">
		select USERPW from USERS where USERID = #{userId} and USERNAME = #{userName}
		and USEREMAIL = #{userEmail}
	</select>

	<resultMap type="UserVO" id="idList">
		<result property="userId" column="USERID" />
	</resultMap>

	<select id="idCheck" resultType="int">
		select count(*) from USERS where USERID = #{userId}
	</select>

	<select id="nickNameCheck" resultType="int">
		select count(*) from USERS where NICKNAME = #{nickName}
	</select>

	<select id="emailCheck" resultType="int">
		select count(*) from USERS where USEREMAIL = #{userEmail}
	</select>

	<insert id="join">
		insert into
		USERS(USERID,USERPW,USERNAME,NICKNAME,BIRTHDAY,USEREMAIL,USERCELLNUM,ADDRZIPNUM,ADDRBASIC,ADDRDETAIL)
		values(#{userId}, #{userPw}, #{userName}, #{nickName}, #{birthDay},
		#{userEmail}, #{userCellNum}, #{addrZipNum}, #{addrBasic},
		#{addrDetail})
	</insert>

	<select id="getUserInfo" resultType="UserVO">
		select USERID,
		USERNAME,
		NICKNAME,
		BIRTHDAY,
		USEREMAIL,
		USERCELLNUM,
		ADDRZIPNUM,
		ADDRBASIC,
		ADDRDETAIL
		from USERS u
		where USERID = #{userId}
	</select>


	<update id="modify">
		update USERS set USERPW = #{userPw}, USEREMAIL = #{userEmail}, USERCELLNUM =
		#{userCellNum},
		ADDRZIPNUM = #{addrZipNum}, ADDRBASIC = #{addrBasic}, ADDRDETAIL = #{addrDetail}
		where USERID = #{userId}
	</update>

	<select id="getJobBoardList" resultType="JobBoardVO">
   <![CDATA[
   select *
   from(select @rownum := @rownum + 1 rn,
                  a.*
           from(select *
                   from JOBBOARD 
                   where USERID = #{userId}
                   order by BNO desc) a ) b, (select @rownum := 0) c
      where rn > (#{pageNum}-1) * #{amount} and rn <= #{pageNum} * #{amount}
   ]]>
	</select>

	<select id="getJobBoardTotal" resultType="int">
		select count(*) from JOBBOARD where USERID = #{userId}
	</select>

	<select id="getFaqBoardList" resultType="InsertQuestionPageVO">
   <![CDATA[
   select *
   from(select @rownum := @rownum +1 rn,
                  a.*
           from(select *
                     from INSERTQUESTIONPAGE 
                     where INSERTID = #{userId}
                     order by INSERTBNO desc) a ) b, (select @rownum := 0) c
      where rn > (#{pageNum}-1) * #{amount} and rn <= #{pageNum} * #{amount}
   ]]>
	</select>

	<select id="getFaqBoardTotal" resultType="int">
		select count(*) from INSERTQUESTIONPAGE where INSERTID = #{userId}
	</select>

	<insert id="kakaoJoin1">
		insert into USERS (USERID,USERPW,USEREMAIL,NICKNAME)
		values(#{userId},#{userId},#{userEmail},#{nickName})
	</insert>

	<insert id="kakaoJoin2">
		insert into USERS (USERID,USERPW,NICKNAME)
		values(#{userId},#{userId},#{nickName})
	</insert>

	<insert id="registLoginCount">
		insert into LOGINCOUNT (USERID) values(#{userId})
	</insert>

	<select id="getloginLimitTime" resultType="LoginCountVO">
		select LOGINLIMITTIME from LOGINCOUNT where USERID= #{userId}
	</select>

	<update id="setLoginLimitN">
		update LOGINCOUNT set LOGINLIMITSTATUS = 'N' where USERID= = #{userId}
	</update>

	<select id="getLoginLimitStatus" resultType="LoginCountVO">
		select LOGINLIMITSTATUS from LOGINCOUNT where USERID= = #{userId}
	</select>

	<update id="resetLoginTryNum">
		update LOGINCOUNT set LOGINTRYNUM = 0 where USERID= = #{userId}
	</update>

	<select id="getloginFailTime" resultType="LoginCountVO">
		select LOGINFAILTIME from LOGINCOUNT where USERID= = #{userId}
	</select>

	<select id="getLoginTryNum" resultType="LoginCountVO">
		select LOGINTRYNUM from LOGINCOUNT where USERID= = #{userId}
	</select>

	<update id="plusLoginTryNum">
		update LOGINCOUNT set LOGINTRYNUM = #{addLoginTryNum} where USERID= =
		#{userId}
	</update>

	<update id="resetLoginFailTime">
		update LOGINCOUNT set LOGINFAILTIME = now() where USERID= = #{userId}
	</update>

	<update id="setLoginLimitY">
		update LOGINCOUNT set LOGINLIMITSTATUS = 'Y' where USERID= #{userId}
	</update>

	<update id="resetLoginLimitTime">
		update LOGINCOUNT set LOGINLIMITTIME = now() where USERID = #{userId}
	</update>
	
</mapper>